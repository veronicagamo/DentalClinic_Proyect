package JDBC;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.LinkedList;

import Interfaces.DentistManager;
import Interfaces.List;
import POJO.Dentist;

public class JDBCDentistManager implements DentistManager{

	private JDBCManager manager;
	
	public JDBCDentistManager(JDBCManager m) {
		
		this.manager=m;
	}

	//The id variable is not included as a parameter in  INSERT INTO because it is
	//generated by the database with an AUTOINCREMENT
	@Override
	public void addDentist(Dentist d) throws Exception {
		
		String sql= "INSERT INTO dentist (name, bank_account, email, mobile) "
				+ " VALUES(?,?,?,?)";
		
			PreparedStatement prep= manager.getConnection().prepareStatement(sql);
		
			prep.setString(1, d.getName());
			prep.setInt(2, d.getBankAccount());
			prep.setString(3, d.getEmail());
			prep.setString(4, d.getMobile());

			prep.executeUpdate();
	}

	@Override
	public void deleteDentist(int dentistId) throws Exception {

		String sql= "DELETE FROM dentist "
				+ " WHERE id= ?";
		
		
		PreparedStatement prep= manager.getConnection().prepareStatement(sql);
	
		prep.setInt(1, dentistId);

		prep.executeUpdate();
	}

	@Override
	public void updateDentist(Dentist d) throws Exception {
		
		String sql= "UPDATE dentist "
				+ "SET name=?, bank_account=?, email=?, mobile=?"
				+ "WHERE id= ?";
		
		PreparedStatement prep= manager.getConnection().prepareStatement(sql);
		
		prep.setString(1, d.getName());
		prep.setInt(2, d.getBankAccount());
		prep.setString(3, d.getEmail());
		prep.setString(4, d.getMobile());
		prep.setInt(5, d.getId());

		prep.executeUpdate();

		
	}

	@Override
	public List<Dentist> listAllDentists() throws Exception {

		List <Dentist> dentists= new LinkedList<>();
		
		Statement stmt= manager.getConnection().createStatement();	
		
		String sql= "SELECT * FROM dentist";
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next()){
			
			int id = rs.getInt("id");
			String name = rs.getString("name");
			int bankAccount = rs.getInt("bank account");
			String email = rs.getString("email");
			String mobile = rs.getString("mobile");
			
			Dentist dentist = new Dentist (id, name, bankAccount, email, mobile);
			
			dentists.add(dentist);
		}
		
		rs.close();
		stmt.close();

		return dentists;
	}

	@Override
	public Dentist getDentistByName(String dName) throws Exception {


		Dentist dentist= null;
		
		String sql= "SELECT * FROM dentist"
				+ "WHERE name= ?";
		
		PreparedStatement prep= manager.getConnection().prepareStatement(sql);
		
		prep.setString(1, dName);
				
		ResultSet rs= prep.executeQuery();
		
		if(rs.next()) {
			
			int id=rs.getInt("id");
			String name= rs.getString("name");
			int bankAccount= rs.getInt("bank account");
			String email= rs.getString("email");
			String mobile= rs.getString("mobile");
			
			dentist= new Dentist(id, name, bankAccount, email, mobile);
			
		}

		rs.close();
		prep.close();
		
		return dentist;
	}
	
	
}
